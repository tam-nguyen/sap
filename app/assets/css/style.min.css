/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 16px/1.6 Arial,Helvetica,sans-serif;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}img{width:100%}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}header .logo{display:-ms-flexbox;display:flex;-ms-flex-align:end;align-items:flex-end;margin-top:30px;margin-bottom:30px}header .logo .left-logo img{width:70px}header .logo .right-logo .mobile-logo{width:102px;margin-left:30px}header .logo .right-logo .desktop-logo{display:none}nav{border-bottom:5px solid #f89f1f;min-height:30px;position:relative;background-color:#000}nav .navbar-toggler{position:absolute;top:-90px;left:86%;font-size:1.7em;border:none}nav ul{-ms-flex-pack:center;justify-content:center}nav ul .dropdown-submenu{position:relative}nav ul .dropdown-submenu .dropdown-menu-custom{margin-left:0;margin-right:0;background-color:#000}nav ul .dropdown-submenu .dropdown-menu-custom li{margin-left:0;margin-right:0;list-style-type:none}nav ul li{margin:13px 30px}nav ul li a{font-size:1.5em;font-weight:500;color:#fff}nav ul li a:hover{color:#f89f1f}nav ul li a:active,nav ul li a:visited{color:#f89f1f;text-decoration:underline}.navbar-light .navbar-toggler-icon{background:url(/assets/img/menu-without-text.png) 50% no-repeat;width:100%}.navbar-light .navbar-toggler-icon:after{content:"Menu";bottom:-35px;position:relative;color:#000;font-size:19px}.navbar-collapse{position:absolute;top:8px;background-color:#000;right:0;width:85%;z-index:3}@media (min-width:992px){header .logo{-ms-flex-pack:justify;justify-content:space-between}header .logo .right-logo .desktop-logo{width:300px;display:block}header .logo .right-logo .mobile-logo{display:none}nav #navbarNav{position:static;-ms-flex-pack:center;justify-content:center}nav #navbarNav .dropdown-submenu .dropdown-menu-custom{position:absolute;width:200%;left:-50%;padding-left:20px;display:none}nav #navbarNav .dropdown-submenu:hover .dropdown-menu-custom{display:block}}h2{font-size:1.875em;line-height:1.875em;font-weight:700;margin:0}h3{font-size:1.5em;line-height:1.5em;margin:30px 0}h4{font-size:1em}.headline{color:#fff;position:relative;padding:30px 0;background-color:#01a0b8}.headline p .date{font-size:1.5em;font-weight:500}.headline p .date:after{content:"\A";white-space:pre}.headline .author{font-weight:700}.headline .headline-bt img{width:100%}.headline:after{content:"";display:block;width:100%;position:absolute;bottom:0;border:4px solid #f89f1f}.main-content{background-color:#fff;position:relative;z-index:2}.main-content h3{margin:5px 0}.main-content .bar{background-color:#01a0b8;padding:8px 15px;color:#fff}.main-content .bar h3{font-weight:700}.main-content .container-small{margin:30px}.main-content .container-small h4{margin-top:20px;margin-bottom:30px;font-weight:700}.main-content .container-small .readmore a{color:#444;text-decoration:underline}.main-content .container-small .readmore a:after{content:"\25BC"}.main-content .img-circle-border{text-align:center}.main-content .img-circle-border .img-circle-border-item h3{margin-top:30px;text-decoration:underline}.intro h2{margin:20px 0}.intro ul{display:none}.intro .col-lg-8{padding-top:37px}.modal-backdrop{display:none}.modal .modal-body{text-align:initial}.modal .modal-body p:first-child{font-size:medium}.modal-dialog{max-width:55%}.social-programme-inner .social-programme-item{border:1px solid #efefef;padding:35px 20px;margin-top:30px;box-shadow:0 0 30px #aaa}.social-programme-inner .social-programme-item img{width:100%}.social-programme-inner .social-programme-item button{background-color:#01a0b8;padding:12px 60px;margin-top:30px;font-size:1.3em;color:#fff}@media screen and (min-width:992px) and (max-width:1200px){.headline{min-height:352px}}@media (min-width:1201px){.headline{min-height:264px}}@media (min-width:992px){h2{font-size:3em}h3{font-size:1.75em}h4{font-size:1.5em}#main{overflow:hidden}.headline{background:url(../../assets/img/dotted_map_white.png) 50% #01a0b8;background-size:cover}.headline h2{font-size:3em}.headline h2 .big-text,.headline p .date{font-size:1.5em}.headline p .date:after{content:" | "}.headline p .author{font-size:1.5em}.headline:after{content:"";display:block;width:208%;left:-54%;height:782px;bottom:-275%;position:absolute;background:#fff;border-radius:49%;border:9px solid #f89f1f}.intro ul{display:block;list-style:none;margin:0;padding:0}.intro ul li{margin:50px 0}.intro ul li img{width:100%}.intro p .paragraph-big-text{font-size:1.5em}.main-content .bar{background-color:#01a0b8;padding:8px 15px;color:#fff}.main-content h3{font-size:2.25em}.main-content .img-circle-border{margin-top:60px;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start;text-align:center}.main-content .img-circle-border .img-circle-border-item{width:270px;margin:0 40px}.main-content .img-circle-border .img-circle-border-item h3{font-weight:700}.main-content .img-circle-border .img-circle-border-item img{border:10px solid #f7941c}.social-programme-inner{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between}.social-programme-inner .social-programme-item{width:48%}.social-programme-inner .social-programme-item img{width:100%}.social-programme-inner .social-programme-item h3{font-weight:700}.social-programme-inner .social-programme-item h4{margin:40px 0}.social-programme-inner .social-programme-item button{background-color:#01a0b8;padding:12px;font-size:1.3em;color:#fff}}footer{margin-top:50px;background-color:#000;padding:25px 0}footer .footer-inner{text-align:center}footer .footer-inner .copy-right{margin-top:10px;font-size:.625em;color:#fff}footer .footer-inner .footer-links a{color:#fff;text-decoration:underline;margin:0 10px}@media (min-width:992px){footer .footer-inner{display:-ms-flexbox;display:flex;-ms-flex-direction:row-reverse;flex-direction:row-reverse;-ms-flex-pack:justify;justify-content:space-between}footer .footer-inner .copy-right{font-size:1.125em;color:#fff}footer .footer-inner .footer-links a{font-size:1.5em;color:#fff}}.carousel-indicators{z-index:1}.carousel-indicators li{width:8px;height:8px;border-radius:50%;border:1px solid #000;background-color:#fff}.carousel-indicators .active{background-color:#000;opacity:1}.carousel-item-desktop{display:none}@media (min-width:992px){.slideshow .carousel-control-next,.slideshow .carousel-control-prev,.slideshow .carousel-indicators,.slideshow .carousel-inner{display:none}.slideshow .carousel-item-desktop{display:block}}button:focus{outline:none}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
